// DO NOT EDIT THIS FILE
// This file has been generated by gen-api-models
// tslint:disable:max-union-size
// tslint:disable:no-identical-functions

import * as t from "io-ts";

import * as r from "italia-ts-commons/lib/requests";

import { ServerInfo } from "./ServerInfo";

/****************************************************************
 * getServerInfo
 */

// Request type definition
export type GetServerInfoT = r.IGetApiRequestType<
  {},
  never,
  never,
  r.IResponseType<200, ServerInfo, never>
>;

export const getServerInfoDefaultResponses = {
  200: ServerInfo
};

export type GetServerInfoResponsesT<A0 = ServerInfo, C0 = ServerInfo> = {
  200: t.Type<A0, C0>;
};

export function getServerInfoDecoder<A0 = ServerInfo, C0 = ServerInfo>(
  overrideTypes:
    | Partial<GetServerInfoResponsesT<A0, C0>>
    | t.Type<A0, C0>
    | undefined = {}
): r.ResponseDecoder<r.IResponseType<200, A0, never>> {
  const isDecoder = (d: any): d is t.Type<A0, C0> =>
    typeof d["_A"] !== "undefined";

  const type = {
    ...((getServerInfoDefaultResponses as unknown) as GetServerInfoResponsesT<
      A0,
      C0
    >),
    ...(isDecoder(overrideTypes) ? { 200: overrideTypes } : overrideTypes)
  };

  const d200 = (type[200].name === "undefined"
    ? r.constantResponseDecoder<undefined, 200, never>(200, undefined)
    : r.ioResponseDecoder<
        200,
        typeof type[200]["_A"],
        typeof type[200]["_O"],
        never
      >(200, type[200])) as r.ResponseDecoder<r.IResponseType<200, A0, never>>;

  return d200;
}

// Decodes the success response with the type defined in the specs
export const getServerInfoDefaultDecoder = () => getServerInfoDecoder();
