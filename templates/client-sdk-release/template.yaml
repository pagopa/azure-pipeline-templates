# Azure DevOps pipeline template to release Client SDK to NPM

parameters:

  - name: 'openapiSpecPath'
    type: string

  - name: 'projectDir'
    type: string
    default: '.'

  - name: 'sdkPackageName'
    type: string
    default: ''

  - name: 'dependsOn'
    type: object
    default: []



stages:

 # Prepare SDK
 # make this stage run after Release, so package.json will be automatically updated
 - stage: Prepare_SDK_Artifact_And_Release  
   dependsOn: ${{parameters.dependsOn}}
   variables:
     generatedCodeDir: '$(Agent.TempDirectory)/generated'
     #codegenPackageNameParameter set with condition in 'setvarStep' script
   pool:
     vmImage: 'ubuntu-latest'
   jobs:
     - job: generate_sdk_artifact
       steps:
         - checkout: self
         - bash: |
             [ "${{parameters.sdkPackageName}}" == "" ] && PKG_NAME_PARAM='' || PKG_NAME_PARAM='--package-name ${{parameters.sdkPackageName}}'  
             echo "##vso[task.setvariable variable=codegenPackageNameParameter;]$PKG_NAME_PARAM"
           name: setvarStep
           displayName: 'Setup conditional variables'
         - bash: |
             npx -p @pagopa/openapi-codegen-ts gen-api-sdk --api-spec ${{ parameters.openapiSpecPath }} --out-dir ${{variables.generatedCodeDir}} $(codegenPackageNameParameter) --client
           displayName: 'Generate client and definitions'
           workingDirectory: ${{ parameters.projectDir }}
         
         - script: |
               yarn install
           displayName: 'Install depencencies'
           workingDirectory: ${{ variables.generatedCodeDir }}
         
         - script: |
               yarn build
           displayName: 'Build depencencies'
           workingDirectory: ${{ variables.generatedCodeDir }}

         - task: CopyFiles@2
           inputs:
             SourceFolder: '${{variables.generatedCodeDir}}'
             TargetFolder: '$(System.DefaultWorkingDirectory)/bundle_sdk'
             # The list of files to be considered is determined by the "files" entry in package.json
             Contents: |
               ?(*.js|*.js.map)
               package.json
               openapi.yaml
             flattenFolders: true
           displayName: 'Copy bundle files'
         
         #Publish artifact so we can check it
         - publish: $(System.DefaultWorkingDirectory)/bundle_sdk
           artifact: Bundle_SDK
           
         - task: Npm@1
           inputs: 
             command: custom
             customCommand: publish --access public
             customEndpoint: $(NPM_CONNECTION)
             verbose: true
             workingDir: '$(System.DefaultWorkingDirectory)/bundle_sdk'
