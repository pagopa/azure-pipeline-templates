parameters:
  # Required
  - name: "COMMAND"
    type: string
    default: "upgrade"
  - name: "DO_DEPLOY"
    displayName: '(Required) Launch helm deploy.'
    type: boolean
  - name: "ENV"
    type: string
    displayName: '(Required) Which environment is involved into deploy.'
  - name: "KUBERNETES_SERVICE_CONN"
    type: string
    displayName: '(Required) Azure devops service connection name.'
#  - name: "NAMESPACE"
#    type: string
#    displayName: '(Required) Kubernetes namespace.'
  - name: "APP_NAME"
    type: string
    displayName: '(Required) Helm deploy name.'
#  - name: "DEPLOY_VERSION"
#    type: string
#    displayName: '(Required) Deploy image tag version.'
  # Optional
  - name: "WAIT_FOR_EXECUTION"
    type: boolean
    default: true
  - name: "ARGUMENTS"
    type: string
    default: "--timeout 5m0s"
  - name: "APPINSIGHTS_SERVICE_CONN"
    type: string
    default: "none"
  - name: "APPINSIGHTS_RESOURCE_ID"
    type: string
    default: "none"
  - name: "OVERRIDE_EXTENDS" # https://learn.microsoft.com/en-us/azure/devops/pipelines/tasks/reference/helm-deploy-v0?view=azure-pipelines
    type: string
    default: ""
    displayName: ",key1=val1,key2=val2"




stages:
  - stage: set_variables
    displayName: ðŸ”¦ ${{parameters.ENV}} set variables ${{parameters.APP_NAME}}
    dependsOn: [ ]
    condition: succeeded()
    jobs:
      - job: set_variable_job
        displayName: Set variable for ${{parameters.APP_NAME}} on ${{parameters.ENV}}
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          - task: Bash@3
            displayName: 'Set namespace variables'
            name: vars
            inputs:
              targetType: 'inline'
              script: |
                echo "##vso[task.setvariable variable=namespace;isOutput=true]$(yq '.microservice-chart.namespace' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
                echo "##vso[task.setvariable variable=deployversion;isOutput=true]$(yq '.microservice-chart.image.tag' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"

#
# SETUP
#
  - stage: helm_setup
    displayName: ðŸ”¦ ${{parameters.ENV}} helm setup ${{parameters.APP_NAME}}
    dependsOn: [set_variables]
    condition: succeeded()
    jobs:
      - job: ${{parameters.ENV}}_setup_${{parameters.APP_NAME}}
        variables:
          namespace: $[stageDependencies.set_variables.set_variable_job.outputs['vars.namespace']]
          deployversion: $[stageDependencies.set_variables.set_variable_job.outputs['vars.deployversion']]
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
          # 1. Setup helm
          - template: ../helm-microservice-chart-setup/template.yaml@helm
            parameters:
              DEPLOY_VERSION: $(deployversion)
              HELM_DEPENDECIES_COMMAND: 'build'
              CHART_FILE: 'helm/${{parameters.ENV}}/${{parameters.APP_NAME}}'
              VALUES_FILE: 'helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml'
#
# DEPLOY
#
  - stage: helm_deploy
    displayName: ðŸš€ ${{parameters.ENV}} helm deploy ${{parameters.APP_NAME}}
    dependsOn: [set_variables]
    condition: succeeded()
    jobs:
      - job: ${{parameters.ENV}}_deploy_${{parameters.APP_NAME}}
        timeoutInMinutes: $[variables.TIME_OUT]
        variables:
          namespace: $[stageDependencies.set_variables.set_variable_job.outputs['vars.namespace']]
          deployversion: $[stageDependencies.set_variables.set_variable_job.outputs['vars.deployversion']]
        steps:
          - checkout: self
#          - task: Bash@3
#            displayName: 'Set namespace variables'
#            inputs:
#              targetType: 'inline'
#              script: |
#                echo "##vso[task.setvariable variable=namespace]$(yq '.microservice-chart.namespace' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
#                echo "##vso[task.setvariable variable=deployversion]$(yq '.microservice-chart.image.tag' $(Build.Repository.LocalPath)/helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml )"
          - template: ../helm-microservice-chart-setup/template.yaml@helm
            parameters:
              DEPLOY_VERSION: $(deployversion)
              HELM_DEPENDECIES_COMMAND: 'build'
              CHART_FILE: 'helm/${{parameters.ENV}}/${{parameters.APP_NAME}}'
          # 1. deploy helm
          - template: ../helm-microservice-chart-deploy/template.yaml@helm
            parameters:
              DO_DEPLOY : true
              COMMAND: ${{parameters.COMMAND}}
              ENV: ${{parameters.ENV}}
              KUBERNETES_SERVICE_CONN: ${{parameters.KUBERNETES_SERVICE_CONN}}
              NAMESPACE: $(namespace)
              APP_NAME: ${{parameters.APP_NAME}}
              CHART_TYPE: "filepath"
              CHART_PATH: 'helm/${{parameters.ENV}}/${{parameters.APP_NAME}}'
              VALUE_FILE: 'helm/${{parameters.ENV}}/${{parameters.APP_NAME}}/values.yaml'
              DEPLOY_VERSION: $(deployversion)
              WAIT_FOR_EXECUTION: ${{parameters.WAIT_FOR_EXECUTION}}
              ARGUMENTS: ${{parameters.ARGUMENTS}}
              APPINSIGHTS_SERVICE_CONN: ${{parameters.APPINSIGHTS_SERVICE_CONN}}
              APPINSIGHTS_RESOURCE_ID: ${{parameters.APPINSIGHTS_RESOURCE_ID}}
              OVERRIDE_EXTENDS: ${{parameters.OVERRIDE_EXTENDS}}

