parameters:
  - name: 'AZURE_APPLY_SERVICE_CONNECTION_NAME'
    displayName: '(Required) Azure service connection name.'
    type: string
  - name: 'APIM_NAME'
    displayName: '(Required) API management instance name'
    type: string
  - name: 'APIM_RG'
    displayName: '(Required) API management resource group name'
    type: string
  - name: 'NAMED_VALUES'
    displayName: '(Required) List of API management named values to be updated'
    type: object
    default: []

steps:
#  - ${{ each named_value in parameters.NAMED_VALUES }}:
  - task: AzureCLI@2
    displayName: 'Read Apim named value'
    inputs:
      azureSubscription: '${{ parameters.AZURE_APPLY_SERVICE_CONNECTION_NAME }}'
      addSpnToEnvironment: true
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      failOnStandardError: true
      inlineScript: |
        echo "##ðŸ’ˆ Retrieving ${{ parameters.APIM_NAME }} named value test-marco-01"
        value=$(az apim nv show --named-value-id test-marco-01 --resource-group ${{ parameters.APIM_RG }} --service-name ${{ parameters.APIM_NAME }} --query "value")
        echo "read value: $value"
        echo "##vso[task.setvariable variable=test-marco-01;isoutput=true]$value"
      name: readValues
  - task: Bash@3
    displayName: 'Print namespace variables'
    inputs:
      targetType: 'inline'
      script: |
        printenv
        echo "test outout: $(readValues.test-marco-01)"
        echo $(readValues.test-marco-01)
#  - task: AzureCLI@2
#    displayName: 'Read Apim named values'
#    inputs:
#      azureSubscription: '${{ parameters.AZURE_APPLY_SERVICE_CONNECTION_NAME }}'
#      addSpnToEnvironment: true
#      scriptType: 'bash'
#      scriptLocation: 'inlineScript'
#      failOnStandardError: true
#      inlineScript: |
#        echo "##ðŸ’ˆ Retrieving ${{ convertToJson(parameters.NAMED_VALUES) }}"
#        value=$(az apim nv show --named-value-id ${{named_value.name}} --resource-group ${{ parameters.APIM_RG }} --service-name ${{ parameters.APIM_NAME }} --query "value")
##        echo "##vso[task.setvariable variable=${{named_value.name}};isoutput=true]$value"
#      name: readValues

  - task: AzureCLI@2
    displayName: Clean project
    condition: always()
    inputs:
      azureSubscription: '${{ parameters.AZURE_APPLY_SERVICE_CONNECTION_NAME }}'
      addSpnToEnvironment: true
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      failOnStandardError: true
      inlineScript: |
        echo "[INFO] Clean project"
        rm -rf .azure
