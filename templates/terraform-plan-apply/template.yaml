# Run terraform init and terraform plan
parameters:
  - name: 'FULL_DOMAIN_NAME'
    displayName: '(Required) Full Domain name. E.g. rtd_app || rtd_common'
    type: string
  - name: 'AZURE_DEVOPS_POOL_AGENT_NAME'
    displayName: '(Required) Azure devops agent name.'
    type: string
    default: ""
  - name: 'AZURE_SERVICE_CONNECTION_PLAN_NAME'
    displayName: '(Required) Azure service connection name for plan.'
    type: string
  - name: 'AZURE_SERVICE_CONNECTION_APPLY_NAME'
    displayName: '(Required) Azure service connection name for apply.'
    type: string
  - name: 'ENVIRONMENT'
    displayName: '(Required) Azure devops ENV name. For example [dev|uat|prod] etc.'
    type: string
  - name: 'TF_ENVIRONMENT_FOLDER'
    displayName: '(Required) Terraform environment folder name to apply to. For example [dev|weudev|uat|weuuat|prod|weuprod] etc.'
    type: string
  - name: 'WORKINGDIR'
    displayName: '(Optional) Working direcory containing terraform templates and the terraform.sh helper.'
    type: string
    default: "src"
  - name: 'AKS_NAME'
    displayName: '(Optional) AKS Name'
    type: string
    default: ""
  - name: 'AKS_API_SERVER_URL'
    displayName: '(Optional) AKS api server url like (e.g. https://my-url.com:443)'
    type: string
    default: ""
  - name: 'AKS_AZURE_DEVOPS_SA_CA_CRT'
    displayName: '(Optional) AKS service account CA cert, used by azure devops account'
    type: string
    default: ""
  - name: 'AKS_AZURE_DEVOPS_SA_TOKEN'
    displayName: '(Optional) AKS service account token, used by azure devops account'
    type: string
    default: ""
  - name: 'SECOND_AKS_NAME'
    displayName: '(Optional) Second AKS Name'
    type: string
    default: ""
  - name: 'SECOND_AKS_API_SERVER_URL'
    displayName: '(Optional) Second AKS api server url like (e.g. https://my-url.com:443)'
    type: string
    default: ""
  - name: 'SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT'
    displayName: '(Optional) Second AKS service account CA cert, used by azure devops account'
    type: string
    default: ""
  - name: 'SECOND_AKS_AZURE_DEVOPS_SA_TOKEN'
    displayName: '(Optional) Second AKS service account token, used by azure devops account'
    type: string
    default: ""
  - name: TF_SUMMARIZE
    displayName: Show summarize data
    type: boolean
    default: true
  - name: REQUEST_VALIDATION
    displayName: Apply requires an approval
    type: boolean
    default: false
  - name: VALIDATION_NOTIFY_USERS
    displayName: Users to be notified for validation
    type: string
    default: ""
  - name: USE_SOPS
    type: boolean
    default: false
  - name: VERSION_SOPS
    type: string
    default: 'v3.9.4'

stages:
#
# PLAN
#
  - stage: ${{parameters.ENVIRONMENT}}_plan_${{parameters.FULL_DOMAIN_NAME}}
    displayName: ðŸ”¦ ${{parameters.ENVIRONMENT}}_plan_${{parameters.FULL_DOMAIN_NAME}}
    dependsOn: []
    condition: succeeded()
    ${{ if ne(parameters.AZURE_DEVOPS_POOL_AGENT_NAME, '') }}:
      pool:
        name: ${{parameters.AZURE_DEVOPS_POOL_AGENT_NAME}}
    jobs:
      - job: ${{parameters.ENVIRONMENT}}_plan_${{parameters.FULL_DOMAIN_NAME}}
        timeoutInMinutes: $[variables.TIME_OUT]
        steps:
          - checkout: self
            workspaceRepo: true
          # 1. Install terraform
          - template: ../terraform-setup/template.yaml@terraform
            parameters:
              USE_SOPS: ${{ parameters.USE_SOPS }}
              VERSION_SOPS: ${{ parameters.VERSION_SOPS }}
          - template: ../terraform-summarize/template.yaml@terraform
          # 2. Run terraform plan
          - template: ../terraform-plan/template.yaml@terraform
            parameters:
              AZURE_SERVICE_CONNECTION_NAME: ${{parameters.AZURE_SERVICE_CONNECTION_PLAN_NAME}}
              TF_ENVIRONMENT_FOLDER: ${{parameters.TF_ENVIRONMENT_FOLDER}}
              WORKINGDIR: ${{parameters.WORKINGDIR}}
              AKS_NAME: ${{parameters.AKS_NAME}}
              AKS_API_SERVER_URL: ${{parameters.AKS_API_SERVER_URL}}
              AKS_AZURE_DEVOPS_SA_CA_CRT: ${{parameters.AKS_AZURE_DEVOPS_SA_CA_CRT}}
              AKS_AZURE_DEVOPS_SA_TOKEN: ${{parameters.AKS_AZURE_DEVOPS_SA_TOKEN}}
              SECOND_AKS_NAME: ${{parameters.SECOND_AKS_NAME}}
              SECOND_AKS_API_SERVER_URL: ${{parameters.SECOND_AKS_API_SERVER_URL}}
              SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT: ${{parameters.SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT}}
              SECOND_AKS_AZURE_DEVOPS_SA_TOKEN: ${{parameters.SECOND_AKS_AZURE_DEVOPS_SA_TOKEN}}
              TF_SUMMARIZE: ${{parameters.TF_SUMMARIZE}}

#
# APPLY
#
  - stage: ${{parameters.ENVIRONMENT}}_apply_${{parameters.FULL_DOMAIN_NAME}}
    displayName: ðŸš€ ${{parameters.ENVIRONMENT}}_apply_${{parameters.FULL_DOMAIN_NAME}}
    dependsOn: ['${{parameters.ENVIRONMENT}}_plan_${{parameters.FULL_DOMAIN_NAME}}']
    condition: succeeded()
    ${{ if ne(parameters.AZURE_DEVOPS_POOL_AGENT_NAME, '') }}:
      pool:
        name: ${{parameters.AZURE_DEVOPS_POOL_AGENT_NAME}}
    jobs:
      - ${{ if eq(parameters['REQUEST_VALIDATION'], true) }}:
        - job: waitForValidation
          condition: succeeded()
          displayName: Wait for external validation
          pool: server
          steps:
            - task: ManualValidation@0
              timeoutInMinutes: 240 # task times out in 4 hours
              inputs:
                notifyUsers: |
                  ${{parameters.VALIDATION_NOTIFY_USERS}}
                instructions: 'Please authorize the apply and resume'
                onTimeout: 'reject'
      - deployment: ${{parameters.ENVIRONMENT}}_apply_${{parameters.FULL_DOMAIN_NAME}}
        ${{ if eq(parameters['REQUEST_VALIDATION'], true) }}:
          dependsOn:  waitForValidation
        continueOnError: false
        environment: ${{parameters.ENVIRONMENT}}
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                  workspaceRepo: true
                # 1. Install terraform
                - template: ../terraform-setup/template.yaml@terraform
                # 2. Run terraform apply
                - template: ../terraform-apply/template.yaml@terraform
                  parameters:
                    AZURE_PLAN_SERVICE_CONNECTION_NAME: ${{parameters.AZURE_SERVICE_CONNECTION_PLAN_NAME}}
                    AZURE_APPLY_SERVICE_CONNECTION_NAME: ${{parameters.AZURE_SERVICE_CONNECTION_APPLY_NAME}}
                    WORKINGDIR: ${{parameters.WORKINGDIR}}
                    TF_ENVIRONMENT_FOLDER: ${{parameters.TF_ENVIRONMENT_FOLDER}}
                    AKS_NAME: ${{parameters.AKS_NAME}}
                    AKS_API_SERVER_URL: ${{parameters.AKS_API_SERVER_URL}}
                    AKS_AZURE_DEVOPS_SA_CA_CRT: ${{parameters.AKS_AZURE_DEVOPS_SA_CA_CRT}}
                    AKS_AZURE_DEVOPS_SA_TOKEN: ${{parameters.AKS_AZURE_DEVOPS_SA_TOKEN}}
                    SECOND_AKS_NAME: ${{parameters.SECOND_AKS_NAME}}
                    SECOND_AKS_API_SERVER_URL: ${{parameters.SECOND_AKS_API_SERVER_URL}}
                    SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT: ${{parameters.SECOND_AKS_AZURE_DEVOPS_SA_CA_CRT}}
                    SECOND_AKS_AZURE_DEVOPS_SA_TOKEN: ${{parameters.SECOND_AKS_AZURE_DEVOPS_SA_TOKEN}}
