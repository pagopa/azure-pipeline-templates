parameters:

- name: 'CONTAINER_REGISTRY_SERVICE_CONN'
  type: string

- name: 'CONTAINER_REGISTRY_FQDN'
  type: string

- name: 'DOCKER_IMAGE_NAME'
  type: string

- name: 'DOCKER_IMAGE_TAG'
  type: string

- name: 'FORCE_REPLACE_DOCKER_IMAGE'
  displayName: "Force the existing docker image to be replaced"
  type: boolean

steps:

- task: Docker@2
  displayName: "docker login"
  inputs:
    containerRegistry: "${{ parameters.CONTAINER_REGISTRY_SERVICE_CONN }}"
    command: "login"

- task: Bash@3
  displayName: "docker build and push (force)"
  condition: and(succeeded(), eq(${{ parameters.FORCE_REPLACE_DOCKER_IMAGE }}, True))
  inputs:
    targetType: "inline"
    script: |
      echo "[INFO] the parameter FORCE_REPLACE_DOCKER_IMAGE is set to true, start build and push"
      echo "[INFO] Image version: ${{ parameters.DOCKER_IMAGE_TAG }}"
      docker build -t ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:${{ parameters.DOCKER_IMAGE_TAG }} .
      docker build -t ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:latest .
      docker push ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:${{ parameters.DOCKER_IMAGE_TAG }}
      docker push ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:latest

- task: Bash@3
  displayName: "docker build and push"
  condition: and(succeeded(), eq(${{ parameters.FORCE_REPLACE_DOCKER_IMAGE }}, False))
  inputs:
    targetType: "inline"
    script: |
      # docker will return 0 on success or 1 on failure.
      echo "[INFO] Image version: ${{ parameters.DOCKER_IMAGE_TAG }}"
      docker manifest inspect ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:${{ parameters.DOCKER_IMAGE_TAG }} > /dev/null
      if [ $? -eq 0 ]; then
        echo "[INFO] docker image already exists in the registry, skip build and push"
      else
        echo "[INFO] docker image does not exist in the registry, start build and push"
        docker build -t ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:${{ parameters.DOCKER_IMAGE_TAG }} .
        docker build -t ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:latest .
        docker push ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:${{ parameters.DOCKER_IMAGE_TAG }}
        docker push ${{ parameters.CONTAINER_REGISTRY_FQDN }}/${{ parameters.DOCKER_IMAGE_NAME }}:latest
      fi
