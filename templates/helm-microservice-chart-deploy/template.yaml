parameters:
  # Required
  - name: "DO_DEPLOY"
    type: boolean
  - name: "ENV"
    type: string
  - name: "KUBERNETES_SERVICE_CONN"
    type: string
  - name: "NAMESPACE"
    type: string
  - name: "APP_NAME"
    type: string
  - name: "VALUE_FILE"
    type: string
  - name: "DEPLOY_VERSION"
    type: string
  # Optional
  - name: "CHART_TYPE"
    type: string
    default: "filepath"
  - name: "CHART_PATH"
    type: string
    default: "helm"
  - name: "WAIT_FOR_EXECUTION"
    type: boolean
    default: true
  - name: "ARGUMENTS"
    type: string
    default: "--timeout 5m0s"
  - name: "APPINSIGHTS_SERVICE_CONN"
    type: string
    default: "none"
  - name: "APPINSIGHTS_RESOURCE_ID"
    type: string
    default: "none"

steps:
  - task: HelmDeploy@0
    displayName: Deploy on ${{ parameters.ENV }}
    condition: and(succeeded(), eq(${{ parameters.DO_DEPLOY }}, True))
    inputs:
      kubernetesServiceEndpoint: ${{ parameters.KUBERNETES_SERVICE_CONN }}
      namespace: ${{ parameters.NAMESPACE }}
      command: upgrade
      chartType: ${{ parameters.CHART_TYPE }}
      chartPath: ${{ parameters.CHART_PATH }}
      chartName: ${{ parameters.APP_NAME }}
      releaseName: ${{ parameters.APP_NAME }}
      valueFile: ${{ parameters.VALUE_FILE }}
      install: true
      waitForExecution: ${{ parameters.WAIT_FOR_EXECUTION }}
      arguments: ${{ parameters.ARGUMENTS }}
      overrideValues: microservice-chart.image.tag=${{ parameters.DEPLOY_VERSION }}
  
  - ${{ if ne(parameters['APPINSIGHTS_SERVICE_CONN'], 'none') }}:
      - task: AzureCLI@2
        displayName: Release annotations
        condition: and(succeeded(), eq(${{ parameters.DO_DEPLOY }}, True))
        inputs:
          azureSubscription: '${{ parameters.APPINSIGHTS_SERVICE_CONN }}'
          addSpnToEnvironment: true
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          failOnStandardError: true
          inlineScript: |
            echo "[INFO] Creating release annotation in Application Insights"
    
            APPINSIGHTS_ID=${{ parameters.APPINSIGHTS_RESOURCE_ID }}
            UUID=$(uuidgen)
            releaseName="${{ parameters.APP_NAME }}-${{ parameters.ENV }}"
            releaseDescription="${{ parameters.DEPLOY_VERSION }}"
            triggerBy="Azure DevOps"
            eventTime=$(date -u '+%Y-%m-%dT%H:%M:%S')
            category="Deployment"
            label="Success"
    
            body='{ "Id": "'$UUID'", "AnnotationName": "'$releaseName'", "EventTime":"'$eventTime'", "Category":"'$category'", "Properties":"{ \"ReleaseName\":\"'$releaseName'\", \"ReleaseDescription\" : \"'$releaseDescription'\", \"TriggerBy\": \"'$triggerBy'\" }"}'
            
            # echo "[INFO] body: $body"
            # echo "[INFO] APPINSIGHTS_ID: $APPINSIGHTS_ID"
    
            az rest --method put --uri "$APPINSIGHTS_ID/Annotations?api-version=2015-05-01" --body "$body" -o none
